<?xml version="1.0"?>
<project name="Impact Bootstrap  Build" basedir="../../" default="full-build">

    <!-- identify properties file -->
    <property file="./scripts/build/build.properties" />

    <target name="full-build">
        <!-- Clean -->
        <antcall target="web-build"/>
        <antcall target="win8-build"/>


        <!--<antcall target="bake"/>-->
        <!--<antcall target="web-build"/>
        <antcall target="ios-build"/>
        <antcall target="win8-build"/>
        <antcall target="chrome-build"/>
        <antcall target="mozilla-build"/>
        <antcall target="post-build-cleanup"/>-->
        <!-- Bake -->
    </target>

    <!-- Delete deploy directory and create a new one -->
    <target name="pre-build">
        <delete dir="${deploy.dir}"/>
        <mkdir dir="${tmp.dir}"/>
    </target>

    <macrodef name="bake-game">
        <attribute name="game" />
        <attribute name="platform" />
        <attribute name="output" default="${tmp.dir}"/>

        <!-- First copy over files -->
        <sequential>

            <delete dir="@{output}"/>

            <sync todir="@{output}">
                <fileset dir="${impact.dir}">
                    <exclude name="weltmeister.html"/>
                    <exclude name="**/lib/weltmeister/**"/>
                    <exclude name="**/tools/*"/>
                </fileset>
            </sync>

            <!-- Second, regex out value we need for the platform -->

            <!-- replace game module -->
            <replaceregexp file="@{output}/lib/game/main.js"
                           match="\/\* build game \*\/(.*?)\/\* end build game \*\/"
                           replace="'@{game}'," flags="gs">
            </replaceregexp>

            <!-- replace platform plugin -->
            <replaceregexp file="@{output}/lib/game/main.js"
                           match="\/\* build plugin \*\/(.*?)\/\* end build plugin \*\/"
                           replace="'@{platform}'" flags="gs">
            </replaceregexp>

            <!-- remove any debug comment blocks-->
            <replaceregexp file="@{output}/lib/game/main.js"
                           match="\/\* build debug \*\/(.*?)\/\* end build debug \*\/"
                           replace="" flags="gs">
            </replaceregexp>

            <!-- replace js source paths in HTML with minified game js. Make sure code is surrounded by "source script" comments so the regex can find it. -->
            <replaceregexp file="@{output}/index.html"
                           match="\&lt;!--source scripts--\&gt;(.*?)\&lt;!--end source scripts--\&gt;"
                           replace="\&lt;script src='game.min.js'\&gt;\&lt;/script\&gt;" flags="gs">
            </replaceregexp>

            <!-- This will automatically replace the title of the html page with the project name -->
            <replaceregexp file="@{output}/index.html"
                           match="&lt;title\b[^&gt;]*&gt;(.*?)&lt;/title&gt;"
                           replace="&lt;title&gt;${project.name}&lt;/title&gt;" flags="gs">
            </replaceregexp>

            <bake src="@{output}"/>

            <delete dir="@{output}/lib"/>

        </sequential>

    </macrodef>

    <!-- Run the bake script - you need PHP to be runnable from the command line. -->
    <macrodef name="bake">
        <attribute name="src" />
        <attribute name="output" default="game.min.js" />

        <sequential>

            <exec dir="@{src}" executable="php">
                <arg value="${impact.dir}/tools/bake.php"/>
                <arg value="lib/impact/impact.js"/>
                <arg value="lib/game/main.js"/>
                <arg value="@{output}"/>
            </exec>

            <!-- Replace version and tracking placeholders with values from the build property -->
            <replace file="@{src}/@{output}" token="@version@" value="${project.version}"/>
            <replace file="@{src}/@{output}" token="@tracking@" value="${project.tracking}"/>
        </sequential>

    </macrodef>


    <target name="web-build">

        <bake-game game="${game.module}" platform="${web.platform}" output="${tmp.dir}"/>

        <sync todir="${web.dir}">
            <fileset dir="${tmp.dir}">

            </fileset>
        </sync>

        <delete dir="${tmp.dir}"/>

    </target>

    <target name="win8-build">

        <bake-game game="${game.module}" platform="${win8.platform}" output="${tmp.dir}"/>

        <delete file="${tmp.dir}/index.html"/>

        <sync todir="${win8.dir}">
            <fileset dir="${tmp.dir}">

            </fileset>
        </sync>

        <delete dir="${tmp.dir}"/>

    </target>




    <target name="chrome-build">

        <!-- Create chrome market app -->
        <sync todir="${chrome.dir}/tmp">
            <fileset dir="${web.dir}">

            </fileset>
        </sync>

        <echo file="${chrome.dir}/tmp/manifest.json" append="false">
            {
            "name": "${project.name}",
            "description": "${project.description}",
            "version": "${project.version}",
            "icons": {
            "16": "images/icons/icon-16x16.png",
            "48": "images/icons/icon-48x48.png",
            "128": "images/icons/icon-128x128.png"
            },
            "app": {"launch": {
            "local_path": "index.html"
            }},
            "homepage_url": "${project.url}"
            }
        </echo>

        <zip destfile="${chrome.dir}/${project.name}-${project.version}.zip" basedir="${chrome.dir}"/>
        <delete dir="${chrome.dir}/tmp/"/>
    </target>

    <target name="mozilla-build">
        <!-- Create Mozilla App -->
        <sync todir="${mozilla.dir}">
            <fileset dir="${web.dir}">

            </fileset>
        </sync>

        <echo file="${mozilla.dir}/manifest.json" append="false">
            {
            "name":"${project.name}",
            "developer": {
            "name":"${company.name}",
            "url":"${company.site}"
            },
            "description":"${project.description}",
            "icons":{
            "16": "/images/icons/icon-16x16.png",
            "48": "/images/icons/icon-48x48.png",
            "128": "/images/icons/icon-128x128.png"
            }
            }
        </echo>
    </target>

</project>